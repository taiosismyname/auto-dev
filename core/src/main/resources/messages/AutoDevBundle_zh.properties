name=AutoDevZh

# 聊天面板
autodev.loading=加载中
autodev.chat=聊天
autodev.crud=自动 CRUD

chat.panel.send=发送
chat.panel.new=新建聊天
chat.panel.newSketch=新建 Sketch
chat.panel.replaceSelection=替换选择的代码
chat.panel.initial.text='Enter' 发送，'Shift+Enter' 开启新行, '/' 调用 DevIns 命令，'@' 调用 Agent
chat.too.long.user.message=消息长度太长，包含{0}个 Token
chat.input.tips=内容不能为空

intention.category.llm=AutoDev
intentions.write.action=生成代码
intentions.assistant.name=AutoDev AI 自动 Action
intentions.assistant.popup.title=AutoDev AI 助手

intentions.chat.code.test.step.prepare-context=准备上下文中
intentions.chat.code.test.step.collect-context=收集所需提示词与上下文
intentions.chat.code.complete.name=代码补全
intentions.chat.code.complete.family.name=代码补全
intentions.chat.code.test.name=测试此代码
intentions.chat.code.test.family.name=测试此代码
intentions.chat.new.family.name=带代码的新聊天
intentions.crud.new.name=在此进行自动 CRUD
intentions.crud.new.family.name=在此进行自动 CRUD
intentions.chat.selected.code.name=基于此代码聊天
intentions.chat.selected.fragment.name=与 {0} 个代码段聊天
intentions.chat.selected.element.name=与 ''{0}'' {1} 聊天
intentions.companion.api.name=与 API 对话
intentions.companion.api.family.name=AutoDev：与 API 对话
intentions.living.documentation.name=生成文档
intentions.living.documentation.family.name=生成文档
intentions.request.background.process.title=您的 LLM 正在处理您的请求

intentions.refactor.readability=请使用简洁而有意义的变量、函数和类名来提高代码的可读性。
intentions.refactor.usability=请确保正确的缩进和格式化，以增强代码的结构和可读性。
intentions.refactor.performance=请优化算法和数据结构，以提高代码的性能。
intentions.refactor.maintainability=请将长而复杂的函数重构为更小、更易管理的函数，以提高代码的可维护性。
intentions.refactor.flexibility=请让设计更加灵活，并易于适应变化的需求。
intentions.refactor.reusability=请设计和实现可重用的组件或模块，以减少重复，并提高开发效率。
intentions.refactor.accessibility=请考虑可访问性要求，并设计系统以使所有用户都能使用，无论他们的能力如何。

autodev.custom.response.format.placeholder=使用 JSON Path，例如：`$.choices[0].delta.content`
autodev.custom.prompt.placeholder=在此处自定义提示词
autodev.custom.intentions.family=自定义意图

tooltip.thanks=感谢您的支持，暂时不支持此项
label.submit.issue=<a href="https://github.com/unit-mesh/auto-dev/issues">想要新功能？</a>

# 请勿删除以下行，也不要重命名它们，除非更改 [LLMSettingCompoent] 类
settings.languageParam=语言
settings.gitTypeParam=Git 类型
settings.gitLabUrlParam=Gitlab 服务器 URL
settings.gitLabTokenParam=Gitlab 令牌
settings.gitHubTokenParam=GitHub 令牌
settings.maxTokenLengthParam=最大 token 长度
settings.customEngineServerParam=LLM 服务器 URL
settings.customModelParam=模型名称
settings.customEngineTokenParam=LLM 服务器密钥

settings.delaySecondsParam=请求延迟秒数（可选）
settings.customEngineResponseFormatParam=自定义响应格式（Json 路径）
settings.customEngineResponseTypeParam=自定义响应类型
settings.customEngineRequestBodyFormatParam=自定义请求主体格式（Json）
settings.customEngineRequestHeaderFormatParam=自定义请求头格式（Json）
settings.external.counit.enable.label=启用 CoUnit（实验性）
settings.external.counit.enable.label.comment=https://github.com/unit-mesh/co-unit
settings.external.counit.location.label=CoUnit 位置（TODO，使用 JSON RPC）：
settings.external.counit.server.address.label=CoUnit 服务器地址：
devti.loading=加载中

customize.title=自定义智能体
counit.agent.enable.label=启用自定义智能体（实验性）
counit.agent.location.label=自定义 RAG 位置（使用 JSON RPC，待办）：
counit.agent.server.address.label=自定义智能体服务器
counit.agent.custom.rag.label=自定义智能体（实验性）
counit.agent.json.placeholder=自定义智能体 JSON 配置

group.DevOpsGenius.NewActions.text=SRE Genius (AutoDev)
action.new.genius.dockerfile=生成 Dockerfile
action.new.genius.cicd.github=生成 GitHub Actions

settings.external.team.prompts.path=团队 AI 路径
settings.external.team.prompts.name=团队 AI

settings.autodev.coder=AutoDev 编码器
settings.autodev.coder.recordingInLocal=本地记录 AI 请求和响应（Instruction）
settings.autodev.coder.trimCodeBeforeSend=在发送代码之前修剪代码
settings.autodev.coder.disableAdvanceContext=禁用高级上下文
settings.autodev.coder.disableAdvanceContext.tips=如框架上下文、语言上下文等
settings.autodev.coder.inEditorCompletion=编辑器中的实时补全
settings.autodev.coder.noChatHistory=没有聊天记录
settings.autodev.coder.explainCode=解释代码
settings.autodev.coder.refactorCode=重构代码
settings.autodev.coder.fixIssueCode=修复问题
settings.autodev.coder.generateTest=生成测试
settings.autodev.coder.useCustomAIEngineWhenInlayCodeComplete=使用自定义 AI 模型
settings.autodev.coder.useCustomAIEngineWhenInlayCodeComplete.tips=使用自定义LLM来进行代码补全
settings.autodev.coder.delaySecondsParam=请求延迟秒数
settings.autodev.coder.maxTokenLengthParam=最大 token 长度（可选）
settings.autodev.coder.customEngineResponseTypeParam=自定义响应类型
settings.autodev.coder.customEngineResponseFormatParam=自定义响应格式（Json 路径）
settings.autodev.coder.customEngineRequestBodyFormatParam=自定义请求 Body 格式（Json）
settings.autodev.coder.customEngineServerParam=自定义 LLM 服务器
settings.autodev.coder.customEngineTokenParam=自定义 LLM 令牌
settings.autodev.coder.customEnginePrompt=自定义 LLM 提示词（Json）：

settings.autodev.devops=DevOps (SDLC)

settings.welcome.message=欢迎使用 AutoDev
settings.welcome.feature.context=精确的上下文感知代码生成、聊天和 Agent 编码
settings.welcome.feature.lifecycle=集成全开发生命周期设计与开发生态链
settings.welcome.feature.custom.action=自定义个人提示词和团队 AI
settings.welcome.feature.custom.agent=与企业 AI 平台一起构建 AI 智能体
settings.welcome.feature.features=<a href="https://ide.unitmesh.cc/">了解更多</a>

# 状态栏
autodev.statusbar.name=AutoDev 状态栏
autodev.statusbar.toolTipText=AutoDev
autodev.statusbar.popup.title=AutoDev 状态栏
autodev.statusbar.id=autodev.statusBarPopup
autodev.directory.completion.description=AutoDev 自定义提示词

# 模板
action.AutoDev.NewPromptTemplate.text=AutoDev 提示词

# PL/SQL
migration.database.plsql=PL/SQL 迁移
migration.database.plsql.generate.function=生成函数
migration.database.plsql.generate.unittest=生成单元测试
migration.database.plsql.generate.entity=生成实体

# 自动 CRUD
autocrud.settings.storyId=故事 ID
autocrud.settings.githubRepo=GitHub 项目（所有者/仓库）
autocrud.progress.creatingStory=处理故事详细信息（1/5）
autocrud.generatingDtoAndEntity=创建 DTO 和实体（2/5）
autocrud.progress.fetchingSuggestEndpoint=获取建议的端点（控制器）（3/5）
autocrud.progress.updatingEndpointMethod=更新端点（控制器）方法（4/5）
autocrud.progress.creatingServiceAndRepository=创建服务和存储库（5/5）

# 自动 SQL
autosql.name=AutoSQL
autosql.generate=生成 SQL
autosql.generate.clarify=澄清需求
autosql.generate.generate=生成 SQL

# 自动页面
autopage.generate=前端生成
autopage.generate.name=AutoPage 生成
autopage.generate.clarify=澄清需求
autopage.generate.design=设计页面

# AutoArkUi
autoarkui.name=AutoArkUi
autoarkui.generate=自动生成 ArkUI
autoarkui.generate.clarify=澄清需求
autoarkui.generate.design=设计页面

# Inlay
intentions.chat.inlay.complete.name=补全代码(Inlay 模式)
intentions.chat.inlay.complete.family.name =补全代码(Inlay 模式)
progress.run.task=正在运行任务

# 右键
settings.autodev.rightClick.explain=解释此处
settings.autodev.rightClick.refactor=重构此处
settings.autodev.rightClick.fixThis=修复此处
settings.autodev.rightClick.chat=讨论此处
settings.autodev.rightClick.writeTest=为此处编写测试
settings.autodev.rightClick.genApiTest=生成 API 测试

# others
settings.autodev.others.fixThis=修复此问题 (AutoDev)
settings.autodev.others.quickAssistant=文本生成代码 (AutoDev)
settings.autodev.others.commitMessage=提交消息 (AutoDev)
settings.autodev.others.generateReleaseNote=生成发布说明 (AutoDev)
settings.autodev.others.codeReview=代码审查 (AutoDev)
settings.autodev.others.prepushReviewAction=预推送审查 (AutoDev)
settings.autodev.others.codeComplete=补全代码 (AutoDev)
settings.autodev.others.editSettings=编辑设置

# simple prompts
prompts.autodev.explainCode=解释如下 {0} 代码。
prompts.autodev.refactorCode=重构给定的 {0} 代码。
prompts.autodev.completeCode=完成 {0} 代码，返回剩余代码，不解释。
prompts.autodev.generateTest=为 {0} 代码生成测试。
prompts.autodev.fixProblem=帮我修复问题：
prompts.autodev.generateReleaseNote=生成发布说明
prompts.autodev.generateTestData=基于给定的 {0} 代码和请求/响应信息生成 API 测试请求（使用 markdown 代码块）。这样我们就可以用它来测试 API
settings.autodev.coder.enableRenameSuggestion=启用重命名建议
shell.command.suggestion.action.default.text=如何创建一个新的分支?
batch.nothing.to.testing=没有要 AutoTest 的内容
intentions.chat.code.test.verify=验证测试中
open\ documents=Open Documents
settings.autodev.llm.key.not.set=LLM 密钥未设置
settings.autodev.coder.testConnectionButton.tips=请记得在修改后点击应用，再进行测试！

sketch.patch.action.accept=Accept
sketch.patch.action.accept.tooltip=Accept the change
sketch.patch.action.reject=Reject
sketch.patch.action.reject.tooltip=Reject the change
sketch.patch.action.viewDiff=View Diff
sketch.patch.action.viewDiff.tooltip=View the diff
sketch.patch.action.runDiff.tooltip=Run Diff
sketch.patch.action.repairDiff.tooltip=Repair Diff
# rollback
sketch.patch.action.rollback=Rollback
sketch.patch.action.rollback.tooltip=Rollback the change
prompts.autodev.inlineChat=According user selection to ask user question
prompts.autodev.sketch=Sketch
sketch.composer.mode=Composer Mode（自动模式）
sketch.lint.error.tooltip=查看 Lint/Inspection 错误
sketch.lint.error=发现 {0} 个 Lint/Inspection 错误
custom.action=Custom Action
custom.living.documentation=Custom Living Documentation
sketch.dependencies.check=Check dependencies has Issues
